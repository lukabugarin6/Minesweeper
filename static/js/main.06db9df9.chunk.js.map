{"version":3,"sources":["actions/BoardActions.js","components/Cell.js","constants/gameConstants.js","components/Board.js","components/CustomSelect.js","utility/utility.js","reducers/boardReducer.js","App.js","reportWebVitals.js","index.js"],"names":["BoardActions","Cell","props","dispatch","useContext","dispatchContext","stateContext","gameClear","gameOver","level","clickNumber","minesLeft","cellInfo","hasMine","isUncovered","numMinesAround","row","column","flagged","useEffect","type","className","onClick","payload","onDoubleClick","onContextMenu","e","preventDefault","stopPropagation","onCellRightClick","jsx","GameLevel","Object","freeze","EASY","name","rows","columns","num_mine","INTERMEDIATE","EXPERT","GameInitialState","board","InjectMineEnum","DO_NOT_INJECT","INJECT","Board","state","style","gridTemplateRows","gridTemplateColumns","map","i","cell","j","CustomSelect","defText","optList","onLevelSelect","useState","optionsList","defaultSelectText","setDefaultSelectText","showOptionsList","setShowOptionsList","document","addEventListener","handleClickOutside","removeEventListener","target","classList","contains","option","index","data-name","getAttribute","handleOptionClick","value","getSurroundingCellIndex","isCell","length","referenceToAdjacentCells","originalBoard","adjacentCells","surroundingCellIndex","newRow","newColumn","push","boardReducer","initiateEmptyBoard","resetBoard","uncoverCell","didGameClear","uncoverAdjacentCells","toggleFlagCell","Error","Array","from","fill","prevBoard","minesAround","forEach","populateNumber","emptyBoard","numMine","numInjectedMines","tempBoard","JSON","parse","stringify","rowIndex","indexAroundClickedCell","includes","Math","floor","random","populateMines","newBoard","memo","stack","centerCell","pop","surroundingCells","reduce","acc","currCell","React","createContext","levels","App","useReducer","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.06db9df9.chunk.js","sourcesContent":["export const BoardActions = {\r\n  INITIATE_BOARD: \"INITIATE_BOARD\",\r\n  UNCOVER_CELL: \"UNCOVER_CELL\",\r\n  DOUBLE_CLICK_CELL: \"DOUBLE_CLICK_CELL\",\r\n  RIGHT_CLICK_CELL: \"RIGHT_CLICK_CELL\",\r\n  CHANGE_LEVEL: \"CHANGE_LEVEL\",\r\n  GAME_OVER: \"GAME_OVER\",\r\n  INITIATE_DUMMY_BOARD: \"INITIATE_DUMMY_BOARD\",\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\n\r\nimport { FaBomb } from \"react-icons/fa\";\r\nimport { BsFlagFill } from \"react-icons/bs\";\r\nimport {AiFillFire} from 'react-icons/ai'\r\n\r\nimport { dispatchContext, stateContext } from \"../App\";\r\nimport { BoardActions } from \"../actions/BoardActions\";\r\n\r\nconst Cell = (props) => {\r\n  const dispatch = useContext(dispatchContext);\r\n  const { gameClear ,gameOver, level, clickNumber, minesLeft } = useContext(stateContext);\r\n\r\n  let {\r\n    hasMine,\r\n    isUncovered,\r\n    numMinesAround,\r\n    row,\r\n    column,\r\n    flagged,\r\n  } = props.cellInfo;\r\n\r\n  useEffect(()=> {\r\n    if(isUncovered && hasMine) dispatch({ type: BoardActions.GAME_OVER });\r\n  }, [isUncovered, dispatch, hasMine])\r\n\r\n  const onCellClick = () => {\r\n    if (flagged || gameOver || gameClear) return;\r\n    if (clickNumber === 0) {\r\n      dispatch({\r\n        type: BoardActions.INITIATE_BOARD,\r\n        payload: { level, row, column },\r\n      });\r\n    }\r\n    dispatch({ type: BoardActions.UNCOVER_CELL, payload: { row, column }});\r\n  };\r\n\r\n  const onCellDoubleClick = () => {\r\n    if (gameOver) return;\r\n    dispatch({ type: BoardActions.DOUBLE_CLICK_CELL, payload: { row, column }})\r\n  }\r\n\r\n  const onCellRightClick = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if(gameOver || isUncovered || gameClear || (!flagged && minesLeft <= 0)) return;\r\n    dispatch({type:BoardActions.RIGHT_CLICK_CELL, payload: { row, column }});\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`cell text-quinary ${isUncovered ? 'bg-secondary uncovered' : 'cursor-pointer hover:bg-quinary hover:text-primary' } inline-flex justify-center items-center`}\r\n        onClick={onCellClick}\r\n        onDoubleClick={onCellDoubleClick}\r\n        onContextMenu={(e) => onCellRightClick(e)}\r\n      >\r\n        {/* { && <FaBomb />} */}\r\n        { hasMine && gameOver && !isUncovered ? <span className='bomb text-xl text-quinary'><FaBomb /></span>  : null}\r\n        { (hasMine && isUncovered) ? <span className='boom text-red-400 text-2xl'><AiFillFire /></span> : null}\r\n        {(flagged && !gameOver ) ? <span className='flag text-2xl'><BsFlagFill /></span>  : ''}\r\n        {(numMinesAround && !hasMine && isUncovered) ? <span className={`number-${numMinesAround} text-lg font-semibold`}>{numMinesAround}</span> : ''}\r\n      </div>\r\n      <style jsx>{`\r\n        .cell {\r\n          transition: all:\r\n          transition-duration: 200ms;\r\n          border-top: 1px solid #D9B08C;\r\n          border-left: 1px solid #D9B08C;\r\n          border-right: 1px solid #D9B08C;\r\n          border-bottom: 1px solid #D9B08C;\r\n        }\r\n        .cell.uncovered {\r\n          transition: all;\r\n          transition-duration: 550ms;\r\n          border: 1px solid #D1E8E2;\r\n        }\r\n\r\n      `}</style>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","export const GameLevel = Object.freeze({\r\n  EASY: {\r\n    name: \"EASY\",\r\n    rows: 8,\r\n    columns: 8,\r\n    num_mine: 10,\r\n  },\r\n  INTERMEDIATE: {\r\n    name: \"INTERMEDIATE\",\r\n    rows: 20,\r\n    columns: 20,\r\n    num_mine: 50,\r\n  },\r\n\r\n  EXPERT: {\r\n    name: \"EXPERT\",\r\n    rows: 32,\r\n    columns: 32,\r\n    num_mine: 150,\r\n  },\r\n});\r\n\r\nexport const GameInitialState = {\r\n  board: [],\r\n  level: GameLevel.EASY,\r\n  gameOver: false,\r\n  minesLeft: GameLevel.EASY.num_mine,\r\n  gameClear: false,\r\n  clickNumber: 0,\r\n};\r\n\r\nexport const InjectMineEnum = Object.freeze({\r\n    DO_NOT_INJECT: 0,\r\n    INJECT: 1\r\n});","import React, { useEffect, useContext } from \"react\";\r\n\r\nimport Cell from \"./Cell\";\r\n\r\nimport { stateContext, dispatchContext } from \"../App\";\r\nimport { BoardActions } from \"../actions/BoardActions\";\r\n\r\nimport { GameLevel } from \"../constants/gameConstants\";\r\n\r\nconst Board = () => {\r\n  const state = useContext(stateContext);\r\n  const dispatch = useContext(dispatchContext);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: BoardActions.INITIATE_DUMMY_BOARD,\r\n      payload: { level: GameLevel.EASY },\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"relative overflow-y-hidden\">\r\n      <h1\r\n        className={`text-red-400 font-bold transition-all duration-1000 transform ${\r\n          state.gameOver\r\n            ? \"opacity-100 translate-y-24\"\r\n            : \"opacity-0 translate-y-96\"\r\n        } text-5xl lg:text-6xl xl:text-7xl 2xl:text-8xl absolute -top-0 left-1/2 transform -translate-x-1/2`}\r\n      >\r\n        GAME OVER\r\n      </h1>\r\n    <h1 className={`text-green-400 font-bold transition-all duration-1000 transform ${\r\n          state.gameClear\r\n            ? \"opacity-100 translate-y-24\"\r\n            : \"opacity-0 translate-y-96\"\r\n        } text-5xl lg:text-6xl xl:text-7xl 2xl:text-8xl absolute -top-0 left-1/2 transform -translate-x-1/2`}>YOU WON</h1>\r\n      <div\r\n        className=\"grid w-min mx-auto pb-20 px-4\"\r\n        style={{\r\n          gridTemplateRows: `repeat(${state.level.rows}, 36px)`,\r\n          gridTemplateColumns: `repeat(${state.level.columns}, 36px)`,\r\n        }}\r\n      >\r\n        {state.board.map((row, i) => {\r\n          return row.map((cell, j) => {\r\n            return (\r\n              <Cell\r\n                cellInfo={{\r\n                  ...cell,\r\n                  row: i,\r\n                  column: j,\r\n                }}\r\n                key={[i, j]}\r\n              />\r\n            );\r\n          });\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nimport {AiFillCaretDown} from 'react-icons/ai'\r\n\r\nconst CustomSelect = ({ defText, optList, state, onLevelSelect }) => {\r\n  const [optionsList, setOptionsList] = useState(optList)\r\n  const [defaultSelectText, setDefaultSelectText] = useState(defText)\r\n  const [showOptionsList, setShowOptionsList] = useState(false)\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside)\r\n    setDefaultSelectText(defText)\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (\r\n      !e.target.classList.contains('custom-select-option')\r\n    ) {\r\n      setShowOptionsList(false)\r\n    }\r\n  }\r\n\r\n  const handleListDisplay = () => {\r\n    setShowOptionsList(!showOptionsList)\r\n  }\r\n\r\n  const handleOptionClick = (e) => {\r\n    setDefaultSelectText(e.target.getAttribute('data-name'))\r\n    setShowOptionsList(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"custom-select-container w-36 text-xs lg:text-sm\">\r\n        <div\r\n          className={`flex justify-between items-center p-1.5 lg:p-2 lg:pl-4 ${showOptionsList ? 'selected-text active' : 'selected-text'}`}\r\n          onClick={handleListDisplay}\r\n        >\r\n          {defaultSelectText} <span className='ml-1 text-xl'><AiFillCaretDown /></span> \r\n        </div>\r\n        {showOptionsList && (\r\n          <ul className=\"select-options\">\r\n            {optionsList && optionsList.map((option, index) => {\r\n              return (\r\n                <li\r\n                  className=\"custom-select-option\"\r\n                  data-name={option.name}\r\n                  key={index + 1}\r\n                  onClick={(e) => {\r\n                    handleOptionClick(e);\r\n                    onLevelSelect(option.value);\r\n                  } }\r\n                >\r\n                  {option.name}\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <style jsx>{`\r\n        .custom-select-container {\r\n          display: inline-block;\r\n          min-width: 113px;\r\n          position: relative;\r\n          cursor: pointer;\r\n          font-weight:600;\r\n        }\r\n\r\n        .selected-text {\r\n          background-color: transparent;\r\n          border: 2px solid #116466;\r\n          color: #116466;\r\n          border-radius: 6px;\r\n          transition: all;\r\n          transition-duration: 300ms;\r\n        }\r\n\r\n        .selected-text:hover {\r\n            border: 2px solid #FFCB9A;\r\n            color: #FFCB9A;\r\n          }\r\n\r\n        // .selected-text::after,.selected-text::before {\r\n        //   content: '';\r\n        //   position: absolute;\r\n        //   width: 7px;\r\n        //   height:7px;\r\n        //   border-top: 2px solid #red;\r\n        //   border-left: 2px solid #red;\r\n        //   right:11px;\r\n        //   transform: rotate(45deg);\r\n        //   background: #116466;\r\n       \r\n        // }\r\n        // .selected-text::after {\r\n        //   top: 12px;\r\n        // }\r\n        // .selected-text::before {\r\n        //   bottom: 12px;\r\n        //   transform: rotate(225deg);\r\n        // }\r\n\r\n        // .selected-text.active::after {\r\n        //   top: 8px;\r\n        //   border-color: transparent transparent #21425D transparent;\r\n        // }\r\n\r\n        ul {\r\n          margin: 0;\r\n          padding: 0;\r\n          z-index:99;\r\n          transition: all 0.2s;\r\n          top: 0px;\r\n        }\r\n\r\n        .select-options {\r\n          position: absolute;\r\n          width: 100%;\r\n        }\r\n\r\n        li {\r\n          list-style-type: none;\r\n          padding: 12px 0;\r\n          padding-left: 20px;\r\n          background: #2C3531;\r\n          transition: all 0.2s;\r\n          text-align: left;\r\n          border-left: 1px solid #116466;\r\n          border-right: 1px solid #116466;\r\n          cursor: pointer;\r\n        }\r\n        li:first-child {\r\n          border-radius: 6px 6px 0 0;\r\n          border-top: 1px solid #116466;\r\n\r\n        }\r\n        li:last-child {\r\n          border-radius: 0 0 6px 6px;\r\n          border-bottom: 1px solid #116466;\r\n        }\r\n        li:hover {\r\n             background-color: #FFCB9A;\r\n          color: #116466;\r\n        }\r\n      `}</style>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomSelect\r\n","export function getSurroundingCellIndex(row, column) {\r\n    return [\r\n      [row - 1, column - 1],\r\n      [row - 1, column],\r\n      [row - 1, column + 1],\r\n      [row, column - 1],\r\n      [row, column + 1],\r\n      [row + 1, column -1],\r\n      [row + 1, column],\r\n      [row + 1, column + 1],\r\n    ];\r\n}\r\n\r\nexport function isCell(board, row, column) {\r\n    if(row >= 0 && row < board.length && column >=0 && column < board[0].length) {\r\n      return true;\r\n    }\r\n  \r\n    return false;\r\n  }\r\n\r\nexport function referenceToAdjacentCells(originalBoard, row, column) {\r\n    const adjacentCells = [];\r\n  \r\n    const surroundingCellIndex = getSurroundingCellIndex(row, column);\r\n  \r\n    for(let [newRow, newColumn] of surroundingCellIndex) {\r\n  \r\n      if (isCell(originalBoard, newRow, newColumn)) {\r\n        adjacentCells.push({\r\n          cell: originalBoard[newRow][newColumn],\r\n          row: newRow,\r\n          column: newColumn,\r\n        });\r\n      }\r\n    }\r\n  \r\n    return adjacentCells;\r\n  }","import { InjectMineEnum } from '../constants/gameConstants';\r\n\r\nimport { BoardActions } from '../actions/BoardActions';\r\nimport { referenceToAdjacentCells, getSurroundingCellIndex } from '../utility/utility';\r\n\r\nexport function boardReducer (state, { type, payload }) {\r\n  switch(type) {\r\n    case BoardActions.INITIATE_DUMMY_BOARD:\r\n      return {\r\n        ...state,\r\n        gameOver: false,\r\n        gameClear: false,\r\n        clickNumber: 0,\r\n        minesLeft: state.level.num_mine,\r\n        board: initiateEmptyBoard(state.level),\r\n      };\r\n\r\n    case BoardActions.INITIATE_BOARD:\r\n      return {\r\n        ...state,\r\n        minesLeft: payload.level.num_mine,\r\n        board: resetBoard(state.board, payload.level, payload.row, payload.column),\r\n        clickNumber: 1,\r\n      };\r\n\r\n    case BoardActions.UNCOVER_CELL:\r\n      return {\r\n        ...state,\r\n        board: uncoverCell(state.board, payload.row, payload.column),\r\n        gameClear: didGameClear(uncoverCell(state.board, payload.row, payload.column)),\r\n      };\r\n    case BoardActions.DOUBLE_CLICK_CELL:\r\n      return {\r\n        ...state,\r\n        board: uncoverAdjacentCells(state.board, payload.row, payload.column),\r\n        gameClear: didGameClear(uncoverAdjacentCells(state.board, payload.row, payload.column)),\r\n      };\r\n\r\n    case BoardActions.RIGHT_CLICK_CELL:\r\n      return {\r\n        ...state,\r\n        minesLeft: minesLeft(state.board, payload.row, payload.column, state.minesLeft),\r\n        board: toggleFlagCell(state.board, payload.row, payload.column),\r\n        gameClear: didGameClear(toggleFlagCell(state.board, payload.row, payload.column)),\r\n      };\r\n\r\n    case BoardActions.CHANGE_LEVEL:\r\n      return {\r\n        ...state,\r\n        gameOver: false,\r\n        gameClear: false,\r\n        clickNumber: 0,\r\n        level: payload.level,\r\n        minesLeft: payload.level.num_mine,\r\n        board: initiateEmptyBoard(payload.level),\r\n      };\r\n    \r\n    case BoardActions.GAME_OVER:\r\n      return {\r\n        ...state,\r\n        gameOver: true,\r\n      };\r\n\r\n    default:\r\n      throw new Error('No matching action type in reducer');\r\n  }\r\n}\r\n\r\nfunction initiateEmptyBoard({ rows, columns }) {\r\n  return Array.from(\r\n    Array(rows), () =>\r\n    new Array(columns).fill({\r\n      hasMine: false,\r\n      isUncovered: false,\r\n      numMinesAround: 0,\r\n      flagged: false,\r\n    })\r\n    );\r\n}\r\n\r\nfunction populateMines(emptyBoard, numMine, row, column) {\r\n  let numInjectedMines = 0;\r\n  let tempBoard = JSON.parse(JSON.stringify(emptyBoard));\r\n\r\n  let rowIndex = 0;\r\n\r\n  const indexAroundClickedCell= getSurroundingCellIndex(row, column).map(index => JSON.stringify(index));\r\n\r\n  while(numInjectedMines < numMine) {\r\n    for(let i=0; i < emptyBoard[rowIndex].length; i++) {\r\n      if(rowIndex === row && i === column) {\r\n        continue;\r\n      }\r\n\r\n      if(indexAroundClickedCell.includes(JSON.stringify([rowIndex, i]))) {\r\n        continue;\r\n      }\r\n\r\n      if(numInjectedMines === numMine) {\r\n        break;\r\n      }\r\n\r\n      const shouldInjectMine = Math.floor(Math.random() * Math.floor(10));\r\n\r\n      if(shouldInjectMine === InjectMineEnum.INJECT && \r\n        tempBoard[rowIndex][i].hasMine === false\r\n        ) {\r\n        tempBoard[rowIndex][i].hasMine = true;\r\n        numInjectedMines++;\r\n      }\r\n    }\r\n    \r\n    if (rowIndex === emptyBoard.length - 1) {\r\n      rowIndex = 0;\r\n    } else {\r\n      rowIndex++;\r\n    }\r\n  }\r\n  return tempBoard;\r\n}\r\n\r\nfunction populateNumber(prevBoard) {\r\n  for(let i=0; i <prevBoard.length; i++) {\r\n    for(let j=0; j<prevBoard[i].length; j++) {\r\n      const adjacentCells = referenceToAdjacentCells(prevBoard, i, j);\r\n      let minesAround = 0;\r\n      adjacentCells.forEach(({cell, row, column}) => {\r\n        if(cell.hasMine) minesAround++;\r\n      })\r\n\r\n      prevBoard[i][j].numMinesAround = minesAround;\r\n    }\r\n  }\r\n  return prevBoard;\r\n};\r\n\r\nfunction resetBoard(board, level, row, column) {\r\n  let boardWithMines = populateMines(board, level.num_mine, row, column);\r\n  return populateNumber(boardWithMines, row, column);\r\n}\r\n\r\nfunction minesLeft(board, row, column, minesLeft) {\r\n  return board[row][column].flagged ? minesLeft + 1: minesLeft - 1\r\n}\r\n\r\nfunction uncoverCell(originalBoard, row, column) {\r\n  const newBoard = JSON.parse(JSON.stringify(originalBoard));\r\n  newBoard[row][column].isUncovered = true;\r\n  if(newBoard[row][column].numMinesAround === 0 && !newBoard[row][column].hasMine) {\r\n    return uncoverAdjacentCells(newBoard, row, column);\r\n  }\r\n  return newBoard;\r\n}\r\n\r\n\r\nfunction toggleFlagCell(originalBoard, row, column) {\r\n  const newBoard = JSON.parse(JSON.stringify(originalBoard));\r\n  newBoard[row][column].flagged = !newBoard[row][column].flagged;\r\n  return newBoard\r\n}\r\n\r\nfunction uncoverAdjacentCells(originalBoard, row, column) {\r\n  const memo = {};\r\n  const stack = [{ cell: originalBoard[row][column], row, column }];\r\n\r\n  while(stack.length > 0) {\r\n    const centerCell = stack.pop();\r\n    const surroundingCells = referenceToAdjacentCells(originalBoard, centerCell.row, centerCell.column);\r\n    \r\n    const flagsInAdjacentCells = surroundingCells.reduce((acc, currCell) => {\r\n      if(currCell.cell.flagged) return acc + 1;\r\n      return acc;\r\n    }, 0);\r\n\r\n    if (flagsInAdjacentCells < centerCell.cell.numMinesAround) return originalBoard;\r\n\r\n    for (let cell of surroundingCells) {\r\n      if(memo[`${cell.row}-${cell.column}`]) continue;\r\n      else {\r\n        memo[`${cell.row}-${cell.column}`] = true;\r\n      }\r\n\r\n      cell.cell.isUncovered = cell.cell.flagged ? false : true;\r\n\r\n      if(cell.cell && !cell.cell.numMinesAround && !cell.cell.hasMine) {\r\n        stack.push(cell);\r\n      }\r\n    }\r\n  }\r\n\r\n  return originalBoard;\r\n};\r\n\r\nfunction didGameClear(board) {\r\n  for(let i=0; i < board.length; i++) {\r\n    for(let j=0; j < board[0].length; j++) {\r\n      if(!board[i][j].hasMine && !board[i][j].isUncovered) {\r\n        return false;\r\n      }\r\n\r\n      if(!board[i][j].hasMine && board[i][j].flagged) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}","import React, { useReducer } from \"react\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport Board from \"./components/Board\";\r\nimport CustomSelect from './components/CustomSelect';\r\n\r\nimport { boardReducer } from \"./reducers/boardReducer\";\r\nimport { GameLevel, GameInitialState } from \"./constants/gameConstants\";\r\nimport { BoardActions } from \"./actions/BoardActions\";\r\n\r\nimport { RiRestartFill } from \"react-icons/ri\";\r\n\r\nexport const stateContext = React.createContext();\r\nexport const dispatchContext = React.createContext();\r\n\r\nconst levels = [{name: 'Easy',value: GameLevel.EASY.name} , {name:'Intermediate',value:GameLevel.INTERMEDIATE.name}, {name: 'Expert', value:GameLevel.EXPERT.name}]\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(boardReducer, GameInitialState);\r\n\r\n  const onResetClick = () => {\r\n    dispatch({\r\n      type: BoardActions.INITIATE_DUMMY_BOARD,\r\n      payload: { level: state.level },\r\n    });\r\n  };\r\n\r\n  function onLevelSelect(value) {\r\n    dispatch({\r\n      type: BoardActions.CHANGE_LEVEL,\r\n      payload: { level: GameLevel[value] },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <stateContext.Provider value={state}>\r\n      <dispatchContext.Provider value={dispatch}>\r\n        <div></div>\r\n        <div className=\"bg-primary min-h-screen pt-20 md:pt-32 lg:pt-24 2xl:pt-40 text-center\">\r\n          <div className=\"uppercase font-medium text-5xl lg:text-6xl text-quinary\">\r\n            minesweeper\r\n          </div>\r\n          <div></div>\r\n          <div className=\"w-full pt-8 md:pt-10 lg:pt-12 text-quinary\">\r\n            <div className=\"flex mb-8 md:mb-10 lg:mb-12 mx-auto w-80 lg:w-96 justify-around items-center\">\r\n              <div className=\"text-xs lg:text-sm border-1 w-24 lg:w-28 border-quinary  rounded-lg px-1 py-2 lg:px-1.5 lg:py-2.5\">Mines left : {state.minesLeft}</div>\r\n              <div className='flex items-center gap-x-1'>\r\n                <button\r\n                  className=\"transition-all duration-1000 bg-transparent border-2 border-secondary text-secondary hover:text-quaternary hover:border-quaternary p-1 text-2xl lg:text-3xl rounded-lg\"\r\n                  onClick={onResetClick}\r\n                >\r\n                  <RiRestartFill />\r\n                </button>\r\n                <CustomSelect defText='Easy' onLevelSelect={onLevelSelect} state={state} optList={levels} />\r\n                {/* <select\r\n                  className=\"text-secondary\"\r\n                  value={state.level.name}\r\n                  onChange={(e) => onLevelSelect(e)}\r\n                >\r\n                  <option value={GameLevel.EASY.name}>Easy</option>\r\n                  <option value={GameLevel.INTERMEDIATE.name}>\r\n                    Intermediate\r\n                  </option>\r\n                  <option value={GameLevel.EXPERT.name}>Expert</option>\r\n                </select> */}\r\n              </div>\r\n            </div>\r\n            <Board />\r\n          </div>\r\n        </div>\r\n      </dispatchContext.Provider>\r\n    </stateContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}