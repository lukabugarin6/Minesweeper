{"ast":null,"code":"var _jsxFileName = \"/home/s/Desktop/Luka/Projects/minesweeper/src/components/Cell.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { FaBomb } from \"react-icons/fa\";\nimport { BsFlagFill } from \"react-icons/bs\";\nimport { AiFillFire } from 'react-icons/ai';\nimport { dispatchContext, stateContext } from \"../App\";\nimport { BoardActions } from \"../actions/BoardActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cell = props => {\n  _s();\n\n  const dispatch = useContext(dispatchContext);\n  const {\n    gameClear,\n    gameOver,\n    level,\n    clickNumber,\n    minesLeft\n  } = useContext(stateContext);\n  const state = useContext(stateContext);\n  let {\n    hasMine,\n    isUncovered,\n    numMinesAround,\n    row,\n    column,\n    flagged\n  } = props.cellInfo;\n  useEffect(() => {\n    if (isUncovered && hasMine) dispatch({\n      type: BoardActions.GAME_OVER\n    });\n  }, [isUncovered, dispatch, hasMine]);\n\n  const onCellClick = () => {\n    console.log(state);\n    if (flagged || gameOver || gameClear) return;\n\n    if (clickNumber === 0) {\n      dispatch({\n        type: BoardActions.INITIATE_BOARD,\n        payload: {\n          level,\n          row,\n          column\n        }\n      });\n    }\n\n    dispatch({\n      type: BoardActions.UNCOVER_CELL,\n      payload: {\n        row,\n        column\n      }\n    });\n  };\n\n  const onCellDoubleClick = () => {\n    if (gameOver) return;\n    dispatch({\n      type: BoardActions.DOUBLE_CLICK_CELL,\n      payload: {\n        row,\n        column\n      }\n    });\n  };\n\n  const onCellRightClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (gameOver || isUncovered || gameClear || !flagged && minesLeft <= 0) return;\n    dispatch({\n      type: BoardActions.RIGHT_CLICK_CELL,\n      payload: {\n        row,\n        column\n      }\n    });\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `cell ${isUncovered ? 'bg-blue-300 uncovered' : ''} inline-flex justify-center items-center`,\n      onClick: onCellClick,\n      onDoubleClick: onCellDoubleClick,\n      onContextMenu: e => onCellRightClick(e),\n      children: [hasMine && gameOver && !isUncovered ? /*#__PURE__*/_jsxDEV(FaBomb, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 49\n      }, this) : null, hasMine && isUncovered ? /*#__PURE__*/_jsxDEV(AiFillFire, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 38\n      }, this) : null, flagged && !gameOver ? /*#__PURE__*/_jsxDEV(BsFlagFill, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 36\n      }, this) : '', numMinesAround && !hasMine && isUncovered ? numMinesAround : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .cell {\n          border-top: 2px solid black;\n          border-left: 2px solid black;\n          border-right: 2px solid yellow;\n          border-bottom: 2px solid yellow;\n        }\n        .cell .uncovered {\n          border: 0.5px solid gray;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cell, \"QOH1ze929vjkjaMHX6WsQ8b7qPQ=\");\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/home/s/Desktop/Luka/Projects/minesweeper/src/components/Cell.js"],"names":["React","useContext","useEffect","FaBomb","BsFlagFill","AiFillFire","dispatchContext","stateContext","BoardActions","Cell","props","dispatch","gameClear","gameOver","level","clickNumber","minesLeft","state","hasMine","isUncovered","numMinesAround","row","column","flagged","cellInfo","type","GAME_OVER","onCellClick","console","log","INITIATE_BOARD","payload","UNCOVER_CELL","onCellDoubleClick","DOUBLE_CLICK_CELL","onCellRightClick","e","preventDefault","stopPropagation","RIGHT_CLICK_CELL"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AAEA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,QAA9C;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,QAAQ,GAAGV,UAAU,CAACK,eAAD,CAA3B;AACA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA,WAA9B;AAA2CC,IAAAA;AAA3C,MAAyDf,UAAU,CAACM,YAAD,CAAzE;AACA,QAAMU,KAAK,GAAGhB,UAAU,CAACM,YAAD,CAAxB;AAGA,MAAI;AACFW,IAAAA,OADE;AAEFC,IAAAA,WAFE;AAGFC,IAAAA,cAHE;AAIFC,IAAAA,GAJE;AAKFC,IAAAA,MALE;AAMFC,IAAAA;AANE,MAOAb,KAAK,CAACc,QAPV;AASAtB,EAAAA,SAAS,CAAC,MAAK;AACb,QAAGiB,WAAW,IAAID,OAAlB,EAA2BP,QAAQ,CAAC;AAAEc,MAAAA,IAAI,EAAEjB,YAAY,CAACkB;AAArB,KAAD,CAAR;AAC5B,GAFQ,EAEN,CAACP,WAAD,EAAcR,QAAd,EAAwBO,OAAxB,CAFM,CAAT;;AAIA,QAAMS,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,QAAIM,OAAO,IAAIV,QAAX,IAAuBD,SAA3B,EAAsC;;AACtC,QAAIG,WAAW,KAAK,CAApB,EAAuB;AACrBJ,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAEjB,YAAY,CAACsB,cADZ;AAEPC,QAAAA,OAAO,EAAE;AAAEjB,UAAAA,KAAF;AAASO,UAAAA,GAAT;AAAcC,UAAAA;AAAd;AAFF,OAAD,CAAR;AAID;;AACDX,IAAAA,QAAQ,CAAC;AAAEc,MAAAA,IAAI,EAAEjB,YAAY,CAACwB,YAArB;AAAmCD,MAAAA,OAAO,EAAE;AAAEV,QAAAA,GAAF;AAAOC,QAAAA;AAAP;AAA5C,KAAD,CAAR;AACD,GAVD;;AAaA,QAAMW,iBAAiB,GAAG,MAAM;AAC9B,QAAIpB,QAAJ,EAAc;AACdF,IAAAA,QAAQ,CAAC;AAAEc,MAAAA,IAAI,EAAEjB,YAAY,CAAC0B,iBAArB;AAAwCH,MAAAA,OAAO,EAAE;AAAEV,QAAAA,GAAF;AAAOC,QAAAA;AAAP;AAAjD,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMa,gBAAgB,GAAIC,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACA,QAAGzB,QAAQ,IAAIM,WAAZ,IAA2BP,SAA3B,IAAyC,CAACW,OAAD,IAAYP,SAAS,IAAI,CAArE,EAAyE;AACzEL,IAAAA,QAAQ,CAAC;AAACc,MAAAA,IAAI,EAACjB,YAAY,CAAC+B,gBAAnB;AAAqCR,MAAAA,OAAO,EAAE;AAAEV,QAAAA,GAAF;AAAOC,QAAAA;AAAP;AAA9C,KAAD,CAAR;AACA,WAAO,KAAP;AACD,GAND;;AAUA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAG,QAAOH,WAAW,GAAG,uBAAH,GAA6B,EAAI,0CADjE;AAEE,MAAA,OAAO,EAAEQ,WAFX;AAGE,MAAA,aAAa,EAAEM,iBAHjB;AAIE,MAAA,aAAa,EAAGG,CAAD,IAAOD,gBAAgB,CAACC,CAAD,CAJxC;AAAA,iBAOIlB,OAAO,IAAIL,QAAX,IAAuB,CAACM,WAAxB,gBAAsC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAtC,GAAmD,IAPvD,EAQKD,OAAO,IAAIC,WAAZ,gBAA2B,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAA3B,GAA4C,IARhD,EASII,OAAO,IAAI,CAACV,QAAb,gBAA0B,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAA1B,GAA2C,EAT9C,EAUIO,cAAc,IAAI,CAACF,OAAnB,IAA8BC,WAA/B,GAA8CC,cAA9C,GAA+D,EAVlE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAO,MAAA,GAAG,MAAV;AAAA,gBAAa;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVM;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AA2BD,CA1ED;;GAAMX,I;;KAAAA,I;AA4EN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\n\nimport { FaBomb } from \"react-icons/fa\";\nimport { BsFlagFill } from \"react-icons/bs\";\nimport {AiFillFire} from 'react-icons/ai'\n\nimport { dispatchContext, stateContext } from \"../App\";\nimport { BoardActions } from \"../actions/BoardActions\";\n\nconst Cell = (props) => {\n  const dispatch = useContext(dispatchContext);\n  const { gameClear ,gameOver, level, clickNumber, minesLeft } = useContext(stateContext);\n  const state = useContext(stateContext);\n\n\n  let {\n    hasMine,\n    isUncovered,\n    numMinesAround,\n    row,\n    column,\n    flagged,\n  } = props.cellInfo;\n\n  useEffect(()=> {\n    if(isUncovered && hasMine) dispatch({ type: BoardActions.GAME_OVER });\n  }, [isUncovered, dispatch, hasMine])\n\n  const onCellClick = () => {\n    console.log(state)\n    if (flagged || gameOver || gameClear) return;\n    if (clickNumber === 0) {\n      dispatch({\n        type: BoardActions.INITIATE_BOARD,\n        payload: { level, row, column },\n      });\n    }\n    dispatch({ type: BoardActions.UNCOVER_CELL, payload: { row, column }});\n  };\n\n\n  const onCellDoubleClick = () => {\n    if (gameOver) return;\n    dispatch({ type: BoardActions.DOUBLE_CLICK_CELL, payload: { row, column }})\n  }\n\n  const onCellRightClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if(gameOver || isUncovered || gameClear || (!flagged && minesLeft <= 0)) return;\n    dispatch({type:BoardActions.RIGHT_CLICK_CELL, payload: { row, column }});\n    return false;\n  }\n\n\n\n  return (\n    <>\n      <div\n        className={`cell ${isUncovered ? 'bg-blue-300 uncovered' : '' } inline-flex justify-center items-center`}\n        onClick={onCellClick}\n        onDoubleClick={onCellDoubleClick}\n        onContextMenu={(e) => onCellRightClick(e)}\n      >\n        {/* { && <FaBomb />} */}\n        { hasMine && gameOver && !isUncovered ? <FaBomb /> : null}\n        { (hasMine && isUncovered) ? <AiFillFire /> : null}\n        {(flagged && !gameOver ) ? <BsFlagFill /> : ''}\n        {(numMinesAround && !hasMine && isUncovered) ? numMinesAround : ''}\n      </div>\n      <style jsx>{`\n        .cell {\n          border-top: 2px solid black;\n          border-left: 2px solid black;\n          border-right: 2px solid yellow;\n          border-bottom: 2px solid yellow;\n        }\n        .cell .uncovered {\n          border: 0.5px solid gray;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}